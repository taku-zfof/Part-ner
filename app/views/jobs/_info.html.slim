.card.my-5.py-5
  .row.justify-content-center
    .col-9
      /新規作成と変種時でビューを分岐させる
      - if action_name == 'new' or action_name == 'create'
        h3.text-center.text-nowrap
          strong
            | パートナーを募集しよう
      - else
        h3.text-center.text-nowrap
          strong
            | 仕事情報を編集

      = form_with model: @job do |f|
        .container

          .row.align-items-center.my-4
            /新規作成と変種時でビューを分岐させる
            - if action_name == 'new' or action_name == 'create'
              = f.label :image do
                = image_tag "noimage_job(#{rand(1..4)}).png", class: 'avatar img-thumbnail w-100',size: "300x300"
                = f.file_field :image, class: 'uploader d-none'
            - else
              = f.label :image do
                = image_tag @job.get_image(1500,1500), class: 'avatar img-thumbnail w-100' ,size: "300x300"
                = f.file_field :image, class: 'uploader d-none'
            p
              | クリックで紹介画像を追加
              br
              small
                | (変更しない場合はランダムになります)

          .row.align-items-center.mb-4
            = f.label :tytle ,"タイトル"
            = f.text_field :tytle, class: "form-control", placeholder: "募集タイトル"
            - if @job.errors.include?(:tytle)
              small.text-danger.text-nowrap
                = @job.errors.full_messages_for(:tytle).first

          .row.align-items-center.mb-4
            = f.label :job_type ,"職種"
            = f.select :job_type, Job.job_types.keys, { include_blank: '選択'}, { class: 'form-control w-75 text-muted'}
            - if @job.errors.include?(:job_type)
              small.text-danger.text-nowrap
                = @job.errors.full_messages_for(:job_type).first

          .row.align-items-center.mb-4
            = f.label :introduction,"紹介文"
            = f.text_area :introduction, class: "introduction form-control", placeholder: "仕事の詳細やアピールポイントなど", size: "10x5"
            small.text-count.text-success
            br
            - if @job.errors.include?(:introduction)
              small.text-danger.text-nowrap
                = @job.errors.full_messages_for(:introduction).first

          .row.align-items-center.mb-4
            = f.label :hourly_wage,"時給", class: "col-12"
            = f.text_field :hourly_wage, class: "form-control w-75 ", placeholder: "半角数字"
            | 円
            - if @job.errors.include?(:hourly_wage_before_type_cast)
              small.text-danger.text-nowrap
                = @job.errors.full_messages_for(:hourly_wage_before_type_cast).first

          .row.align-items-center.mb-4
            = f.label :postal_code, "郵便番号"
            = f.text_field :postal_code, class: "postal_code form-control w-75", placeholder: "0000000"
            - if @job.errors.include?(:postal_code)
              small.text-danger.text-nowrap
                = @job.errors.full_messages_for(:postal_code).first

          .row.align-items-center.mb-4
            = f.label :prefecture_code, "所在地（都道府県）"
            br
            = f.select :prefecture_code, Job.prefecture_codes.keys, { include_blank: '選択'}, { class: 'prefecture_code form-control w-75 text-muted' }
            - if @job.errors.include?(:prefecture_code)
              small.text-danger.text-nowrap
                = @job.errors.full_messages_for(:prefecture_code).first

          .row.align-items-center.mb-4
            = f.label :other_address, "市区町村以降の住所"
            = f.text_field :other_address, class: "other_address form-control w-100", placeholder: "住所を入力"
            - if @job.errors.include?(:other_address)
              small.text-danger.text-nowrap
                = @job.errors.full_messages_for(:other_address).first

        /新規作成と変種時でビューを分岐させる
        .d-flex.justify-content-evenly
          - if action_name == 'new' or action_name == 'create'
            = f.button :type => 'submit', :name => 'post', class: "btn btn-primary btn-rounded" do
              | 公開
            = f.button :type => 'submit', :name => 'draft', class: "btn btn-primary btn-rounded" do
              | 下書き

          - else
            = f.button :type => 'submit', :name => 'post', class: "btn btn-primary btn-rounded" do
              | 公開
            = f.button :type => 'submit', :name => 'draft', class: "btn btn-primary btn-rounded" do
              | 下書き
            button.btn.btn-danger.btn-rounded[data-toggle="modal" data-target="#jobDeletemodal"]
              | 削除

/jpostalは住所自動入力
= render "/jobs/js/jpostal"

/textcounterは文字数カウント
= render "/layouts/js/textcounter", max: 3000
